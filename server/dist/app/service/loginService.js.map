{"version":3,"sources":["../../../app/service/loginService.js"],"names":["Service","require","crypto","LoginService","user","app","mysql","query","user_name","userExist","passwd","pwd","comparePw","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,UAAQC,QAAQ,KAAR,EAAeD,OAA7B;;AAEA,IAAME,SAASD,QAAQ,QAAR,CAAf;;IAEME,Y;;;;;;;;;;;;gGAEUC,I;;;;;;;;uCACgB,KAAKC,GAAL,CAASC,KAAT,CAAeC,KAAf,8DAA+EH,KAAKI,SAApF,Q;;;;;AAAlBC,yC,YAAAA,S;;sCACHA,cAAY,C;;;;;iEACJ,G;;;;uCAGkB,KAAKJ,GAAL,CAASC,KAAT,CAAeC,KAAf,kDAAmEH,KAAKI,SAAxE,Q;;;;;AAAhBE,sC,YAAPA,M;;uCACmB,KAAKL,GAAL,CAASC,KAAT,CAAeC,KAAf,wBAAyCH,KAAKM,MAA9C,a;;;;;AAAbC,mC,YAAJA,G;AACFC,yC,GAAWF,WAASC,G;;sCACvBF,cAAY,CAAZ,IAAe,CAACG,S;;;;;iEACV,G;;;sCAENH,cAAY,CAAZ,IAAeG,S;;;;;iEACT,G;;;iEAEF,G;;;;;;;;;;;;;;;;;;;EAjBYZ,O;;AAyB3Ba,OAAOC,OAAP,GAAiBX,YAAjB","file":"loginService.js","sourcesContent":["const Service=require('egg').Service;\n\nconst crypto = require('crypto');\n\nclass LoginService extends Service{\n\n    async login(user){\n        let [{userExist}]=await this.app.mysql.query(`select count(1) userExist from t_user where user_name='${user.user_name}'`);\n        if(userExist===0){\n            return '2';\n        }\n        //根据输入的用户查询出该用户在库中的密码和salt\n        let [{passwd:passwd}]=await  this.app.mysql.query(`select passwd from t_user where user_name='${user.user_name}'`);\n        const [{pwd:pwd}]=await  this.app.mysql.query(`select password('${user.passwd}') pwd`);\n        const comparePw=(passwd===pwd);\n        if(userExist===1&&!comparePw){\n          return '3'\n        }\n        if(userExist===1&&comparePw){\n          return '1'\n        }\n        return '4';\n    }\n\n\n\n}\n\n\nmodule.exports = LoginService;\n"]}