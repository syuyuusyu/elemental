{"version":3,"sources":["../../../app/controller/home.js"],"names":["Controller","require","jwt","fs","HomeController","ctx","render","body","service","loginService","login","request","msg","user","roles","token","app","mysql","query","user_name","id","sign","payload","secret","redis","set","JSON","stringify","header","get","auth","del","result","updateSuccess","affectedRows","success","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,aAAaC,QAAQ,KAAR,EAAeD,UAAlC;AACA,IAAME,MAAMD,QAAQ,cAAR,CAAZ;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;;IAEMG,c;;;;;;;;;;;;;;;;;;uCAEQ,KAAKC,GAAL,CAASC,MAAT,CAAgB,aAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;AAMN,qCAAKD,GAAL,CAASE,IAAT,GAAc,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAIgB,KAAKC,OAAL,CAAaC,YAAb,CAA0BC,KAA1B,CAAgC,KAAKL,GAAL,CAASM,OAAT,CAAiBJ,IAAjD,C;;;AAAZK,mC;AACAC,oC,GAAO,E;AACPC,qC,GAAQ,E;AACRC,qC,GAAQ,E;;sCACRH,QAAQ,G;;;;;;uCACQ,KAAKI,GAAL,CAASC,KAAT,CAAeC,KAAf,mFACmE,KAAKb,GAAL,CAASM,OAAT,CAAiBJ,IAAjB,CAAsBY,SADzF,Q;;;;;AAAfN,oC;;uCAEa,KAAKG,GAAL,CAASC,KAAT,CAAeC,KAAf,qFAAuGL,KAAKO,EAA5G,C;;;AAAdN,qC;;;AAEAC,wCAAQb,IAAImB,IAAJ,CAAS,EAACC,SAAST,IAAV,EAAT,EAA0B,KAAKG,GAAL,CAASO,MAAnC,EAA2C;AAC/C;AAD+C,iCAA3C,CAAR;AAGA,qCAAKP,GAAL,CAASQ,KAAT,CAAeC,GAAf,CAAmBV,KAAnB,EAA0BW,KAAKC,SAAL,CAAe,EAACd,UAAD,EAAOC,YAAP,EAAf,CAA1B;;;AAEJ,qCAAKT,GAAL,CAASE,IAAT,GAAgB,EAACK,QAAD,EAAMC,UAAN,EAAYE,YAAZ,EAAmBD,YAAnB,EAAhB;;;;;;;;;;;;;;;;;;;;;;;;;AAIMC,qC,GAAQ,KAAKV,GAAL,CAASM,OAAT,CAAiBiB,MAAjB,CAAwB,cAAxB,C;;uCACK,KAAKpB,OAAL,CAAagB,KAAb,CAAmBK,GAAnB,CAAuBd,KAAvB,C;;;AAAbe,oC;;AACN,qCAAKd,GAAL,CAASQ,KAAT,CAAeO,GAAf,CAAmBhB,KAAnB;AACA,qCAAKV,GAAL,CAASE,IAAT,GAAc,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;AAKIQ,qC,GAAM,KAAKV,GAAL,CAASM,OAAT,CAAiBiB,MAAjB,CAAwB,cAAxB,C;;uCACO,KAAKpB,OAAL,CAAagB,KAAb,CAAmBK,GAAnB,CAAuBd,KAAvB,C;;;;AAAZF,oC,SAAAA,I;;uCACY,KAAKG,GAAL,CAASC,KAAT,CAAeC,KAAf,6DAA6EL,KAAKO,EAAlF,C;;;AAAbY,sC;AACEC,6C,GAAgBD,OAAOE,YAAP,KAAwB,C;;AAC9C,qCAAK7B,GAAL,CAASE,IAAT,GAAc,EAAC4B,SAAQF,aAAT,EAAd;;;;;;;;;;;;;;;;;;;EA1CqBjC,U;;AA+C7BoC,OAAOC,OAAP,GAAiBjC,cAAjB","file":"home.js","sourcesContent":["'use strict';\n\nconst Controller = require('egg').Controller;\nconst jwt = require('jsonwebtoken');\nconst fs = require('fs');\n\nclass HomeController extends Controller {\n    async index() {\n        await this.ctx.render('/index.html');\n    }\n\n\n\n    async doNothing(){\n        this.ctx.body={}\n    }\n\n    async login() {\n        let msg = await this.service.loginService.login(this.ctx.request.body);\n        let user = {};\n        let roles = [];\n        let token = '';\n        if (msg === '1') {\n            [user] = await  this.app.mysql.query(\n                `select id,name,user_name,phone,ID_number,email from t_user where user_name='${this.ctx.request.body.user_name}'`);\n            roles = await this.app.mysql.query(`select r.* from t_role r join t_user_role u on r.id=u.role_id  where u.user_id=${user.id}`);\n\n            token = jwt.sign({payload: user}, this.app.secret, {\n                //expiresIn: 30\n            });\n            this.app.redis.set(token, JSON.stringify({user, roles}));\n        }\n        this.ctx.body = {msg, user, token, roles};\n    }\n\n    async logout() {\n        const token = this.ctx.request.header['access-token'];\n        const auth = await this.service.redis.get(token);\n        this.app.redis.del(token);\n        this.ctx.body={};\n\n    }\n\n    async resetPassword(){\n        let token=this.ctx.request.header['access-token'];\n        let {user}=await this.service.redis.get(token);\n        let result=await this.app.mysql.query(`update t_user set passwd=password('123456') where id=${user.id}`);\n        const updateSuccess = result.affectedRows === 1;\n        this.ctx.body={success:updateSuccess};\n    }\n}\n\n\nmodule.exports = HomeController;\n\n\n"]}