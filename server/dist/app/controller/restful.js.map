{"version":3,"sources":["../../../app/controller/restful.js"],"names":["Controller","require","RestfulController","ctx","render","request","body","start","limit","invokeName","groupName","where","test","name","wherecount","result","app","mysql","query","total","select","offset","content","totalElements","entity","next","id","update","insert","updateSuccess","affectedRows","success","setvice","restful","reflashEntity","service","invoke","queryMap","invokeEntitys","filter","d","params","nextEntitys","flag","split","forEach","i","promises","map","Promise","all","p","r","cur","push","parseFun","fn","evil","e","logger","error","obj","o","key","replace","w","p1","delete","p2","p3","Fn","Function","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,aAAWC,QAAQ,KAAR,EAAeD,UAAhC;;IAIME,iB;;;;;;;;;;;;;;;;;;uCAGQ,KAAKC,GAAL,CAASC,MAAT,CAAgB,8BAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;oDAImC,KAAKD,GAAL,CAASE,OAAT,CAAiBC,I,EAAnDC,K,qBAAAA,K,EAAMC,K,qBAAAA,K,EAAMC,U,qBAAAA,U,EAAWC,S,qBAAAA,S;AAC1BC,qC,GAAOF,cAAc,CAAC,KAAKG,IAAL,CAAUH,UAAV,CAAhB,GAAuC,EAACI,MAAKJ,UAAN,EAAvC,GAAyD,E;;AACnEE,wCAAOD,aAAa,CAAC,KAAKE,IAAL,CAAUF,SAAV,CAAf,gBAAyCC,KAAzC,IAA+CD,WAAUA,SAAzD,MAAoEC,KAA1E;AACIG,0C,GAAYL,cAAc,CAAC,KAAKG,IAAL,CAAUH,UAAV,CAAhB,qBAAsDA,UAAtD,UAAoE,W;;AACnFK,6CAAWA,cAAaJ,aAAa,CAAC,KAAKE,IAAL,CAAUF,SAAV,CAAf,yBAAwDA,SAAxD,UAAqE,EAAjF,CAAX;AACIK,sC,GAAO,E;;uCACS,KAAKC,GAAL,CAASC,KAAT,CAAeC,KAAf,6CAA+DJ,UAA/D,EAA6E,EAA7E,C;;;;;AAAdK,qC,YAAAA,K;;uCACiB,KAAKH,GAAL,CAASC,KAAT,CAAeG,MAAf,CAAsB,aAAtB,EAAoC;AACvDZ,2CAAOA,KADgD;AAEvDa,4CAAQd,KAF+C;AAGvDI;AAHuD,iCAApC,C;;;;;AAAfW,uC;;AAKRP,uCAAOQ,aAAP,GAAqBJ,KAArB;AACAJ,uCAAOO,OAAP,GAAeA,OAAf;AACA,qCAAKnB,GAAL,CAASG,IAAT,GAAcS,MAAd;;;;;;;;;;;;;;;;;;;;;;;;;AAIMS,sC,GAAO,KAAKrB,GAAL,CAASE,OAAT,CAAiBC,I;;AAC9B,oCAAG,CAACkB,OAAOC,IAAX,EAAiBD,OAAOC,IAAP,GAAY,IAAZ;AACbV,sC,GAAO,E;;qCACRS,OAAOE,E;;;;;;uCACS,KAAKV,GAAL,CAASC,KAAT,CAAeU,MAAf,CAAsB,aAAtB,EAAqCH,MAArC,C;;;AAAfT,sC;;;;;;uCAEe,KAAKC,GAAL,CAASC,KAAT,CAAeW,MAAf,CAAsB,aAAtB,EAAqCJ,MAArC,C;;;AAAfT,sC;;;AAEJ;AACMc,6C,GAAgBd,OAAOe,YAAP,KAAwB,C;;AAC9C,qCAAK3B,GAAL,CAASG,IAAT,GAAc,EAACyB,SAAQF,aAAT,EAAd;AACA,qCAAK1B,GAAL,CAAS6B,OAAT,CAAiBC,OAAjB,CAAyBC,aAAzB;;;;;;;;;;;;;;;;;;;;;;;;;uCAIoB,KAAKlB,GAAL,CAASC,KAAT,CAAeG,MAAf,CAAsB,aAAtB,EAAoC,EAApC,C;;;AAApB,qCAAKjB,GAAL,CAASG,I;;;;;;;;;;;;;;;;;;;;;;;;;AAIHkB,sC,GAAO,KAAKrB,GAAL,CAASE,OAAT,CAAiBC,I;;uCACV,KAAK6B,OAAL,CAAaF,OAAb,CAAqBG,MAArB,CAA4BZ,MAA5B,EAAmCA,OAAOa,QAA1C,C;;;AAApB,qCAAKlC,GAAL,CAASG,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAILS,sC,GAAO,E;AACLsB,wC,GAAS,KAAKlC,GAAL,CAASE,OAAT,CAAiBC,I;AAC1BgC,6C,GAAc,KAAKtB,GAAL,CAASsB,a;wDACdA,cAAcC,MAAd,CAAqB;AAAA,2CAAGC,EAAE3B,IAAF,KAAS,OAAKV,GAAL,CAASsC,MAAT,CAAgBhC,UAA5B;AAAA,iCAArB,C,qEAARe,M;AACP;;AAEIkB,2C,GAAYJ,cAAcC,MAAd,CAAqB,aAAG;AACpC,wCAAII,OAAK,KAAT;AACAnB,2CAAOC,IAAP,CAAYmB,KAAZ,CAAkB,GAAlB,EAAuBC,OAAvB,CAA+B,aAAG;AAC9B,4CAAGC,MAAIN,EAAEd,EAAF,GAAK,EAAZ,EAAe;AACXiB,mDAAK,IAAL;AACH;AACJ,qCAJD;AAKA,2CAAOA,IAAP;AACH,iCARe,C;AASZI,wC,GAASL,YAAYM,GAAZ,CAAgB;AAAA,2CAAQ,OAAKb,OAAL,CAAaF,OAAb,CAAqBG,MAArB,CAA4BZ,MAA5B,EAAmCa,QAAnC,CAAR;AAAA,iCAAhB,C;;uCACDY,QAAQC,GAAR,CAAYH,QAAZ,C;;;AAARI,iC;;;;;4CAESA,C;;;;;;;;AAALC,iC;AACEC,mC,GAAI,E;uEACYD,C;;;;;;;;AAAd3C,0C;;sCACDA,eAAa,KAAb,IAAsBA,eAAa,S;;;;;;;;AAGtC4C,oCAAI5C,UAAJ,IAAgB2C,EAAE3C,UAAF,EAAcM,MAA9B;;;;;AAEJA,uCAAOuC,IAAP,CAAYD,GAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEJ;AACA,oCAAG7B,OAAO+B,QAAV,EAAmB;AACf,wCAAI;AACIC,0CADJ,GACOC,KAAKjC,OAAO+B,QAAZ,CADP;;AAEAxC,iDAAOyC,GAAGzC,MAAH,CAAP;AAEH,qCAJD,CAIC,OAAO2C,CAAP,EAAS;AACN,6CAAKvD,GAAL,CAASwD,MAAT,CAAgBC,KAAhB,CAAsBF,CAAtB;AACH;AACJ,iCARD,MAQK,CAEJ;AACD;AACA,qCAAKvD,GAAL,CAASG,IAAT,GAAcS,MAAd;;;;;;;;;;;;;;;;;;8BAGE8C,G,EAAI;AACN,gBAAI9C,SAAO,EAAX;AADM;AAAA;AAAA;;AAAA;AAEN,sCAAa8C,GAAb,mIAAiB;AAAA,wBAATC,CAAS;;AACb,yBAAI,IAAIC,GAAR,IAAeD,CAAf,EAAiB;AACb,4BAAIjD,OAAK,EAAT;AACAkD,4BAAIC,OAAJ,CAAY,eAAZ,EAA4B,UAACC,CAAD,EAAGC,EAAH,EAAQ;AAChCrD,mCAAKqD,EAAL;AACH,yBAFD;AAGAnD,+BAAOF,IAAP,IAAaiD,EAAEC,GAAF,CAAb;AACH;AACJ;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWN,mBAAOhD,MAAP;AACH;;;;;;;;;;;uCAGwB,KAAKC,GAAL,CAASC,KAAT,CAAekD,MAAf,CAAsB,aAAtB,EAAqC;AACtDzC,wCAAI,KAAKvB,GAAL,CAASsC,MAAT,CAAgBf;AADkC,iCAArC,C;;;AAAfX,sC;AAGAc,6C,GAAgBd,OAAOe,YAAP,KAAwB,C;;AAC9C,qCAAKI,aAAL;AACA,qCAAK/B,GAAL,CAASG,IAAT,GAAc,EAACyB,SAAQF,aAAT,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAIoB,KAAKb,GAAL,CAASC,KAAT,CAAeC,KAAf,CAAqB,qDAArB,EAA4E,CAAC,KAAKf,GAAL,CAASsC,MAAT,CAAgBhC,UAAjB,CAA5E,C;;;;;AAAdU,qC,aAAAA,K;;AACN,qCAAKhB,GAAL,CAASG,IAAT,GAAc,EAACa,YAAD,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;uCAMqB,KAAKH,GAAL,CAASC,KAAT,CAAeC,KAAf,8C;;;AAArB,qCAAKf,GAAL,CAASG,I;;;;;;;;;;;;;;;;;;;EA5HeN,U;;AAiIhC,SAASyD,IAAT,CAAcD,EAAd,EAAkB;AACdA,OAAGQ,OAAH,CAAW,2CAAX,EAAuD,UAASC,CAAT,EAAWC,EAAX,EAAcE,EAAd,EAAiBC,EAAjB,EAAoB;AACvE,eAAOH,KAAGG,EAAV;AACH,KAFD;AAGA,QAAIC,KAAKC,QAAT;AACA,WAAO,IAAID,EAAJ,CAAO,YAAYd,EAAnB,GAAP;AACH;;AAGDgB,OAAOC,OAAP,GAAevE,iBAAf","file":"restful.js","sourcesContent":["const Controller=require('egg').Controller;\n\n\n\nclass RestfulController extends Controller{\n\n    async toPage(){\n        await this.ctx.render('restful/invokeEntityInfo.tpl');\n    }\n\n    async infos(){\n        const {start,limit,invokeName,groupName}=this.ctx.request.body;\n        let where=(invokeName && !/\\s/.test(invokeName))?{name:invokeName}:{};\n        where=(groupName && !/\\s/.test(groupName))?{...where,groupName:groupName}:where;\n        let wherecount=(invokeName && !/\\s/.test(invokeName))?`where name='${invokeName}'`:'where 1=1';\n        wherecount=wherecount+((groupName && !/\\s/.test(groupName))?` and groupname='${groupName}'`:'');\n        let result={};\n        let [{total}]=await this.app.mysql.query(`select count(1) total from invoke_info ${wherecount}`, []);\n        let [...content]=await this.app.mysql.select('invoke_info',{\n            limit: limit,\n            offset: start,\n            where\n        });\n        result.totalElements=total;\n        result.content=content;\n        this.ctx.body=result;\n    }\n\n    async save(){\n        const entity=this.ctx.request.body;\n        if(!entity.next) entity.next=null;\n        let result={};\n        if(entity.id){\n            result = await this.app.mysql.update('invoke_info', entity);\n        }else {\n            result = await this.app.mysql.insert('invoke_info', entity); // 更新 posts 表中的记录\n        }\n        // 判断更新成功\n        const updateSuccess = result.affectedRows === 1;\n        this.ctx.body={success:updateSuccess};\n        this.ctx.setvice.restful.reflashEntity();\n    }\n\n    async invokes(){\n        this.ctx.body=await this.app.mysql.select('invoke_info',{});\n    }\n\n    async test(){\n        const entity=this.ctx.request.body;\n        this.ctx.body=await this.service.restful.invoke(entity,entity.queryMap);\n    }\n\n    async invoke(){\n        let result=[];\n        const queryMap=this.ctx.request.body;\n        const invokeEntitys=this.app.invokeEntitys;\n        const [entity]=invokeEntitys.filter(d=>d.name===this.ctx.params.invokeName);\n        //await this.app.mysql.select('invoke_info',{where: {  name: this.ctx.params.invokeName}});\n\n        let nextEntitys=invokeEntitys.filter(d=>{\n            let flag=false;\n            entity.next.split(',').forEach(i=>{\n                if(i===d.id+''){\n                    flag=true;\n                }\n            });\n            return flag;\n        });\n        let promises=nextEntitys.map(entity=>this.service.restful.invoke(entity,queryMap));\n        let p=await Promise.all(promises);\n\n        for(let r of p){\n            const cur={};\n            for(let invokeName in r){\n                if(invokeName==='msg' || invokeName==='success'){\n                    continue;\n                }\n                cur[invokeName]=r[invokeName].result;\n            }\n            result.push(cur);\n        }\n        //this.ctx.logger.info('集成就调用结果:',result);\n        if(entity.parseFun){\n            try {\n                let fn=evil(entity.parseFun);\n                result=fn(result);\n\n            }catch (e){\n                this.ctx.logger.error(e);\n            }\n        }else{\n\n        }\n        //this.ctx.logger.info('运行解析函数后结果',result);\n        this.ctx.body=result;\n    }\n\n    parse(obj){\n        let result={};\n        for(let o of obj){\n            for(let key in o){\n                let name='';\n                key.replace(/cloud_(\\w+)-1/,(w,p1)=>{\n                    name=p1;\n                });\n                result[name]=o[key];\n            }\n        }\n        return result;\n    }\n\n    async delete(){\n        const result = await this.app.mysql.delete('invoke_info', {\n            id: this.ctx.params.id\n        });\n        const updateSuccess = result.affectedRows === 1;\n        this.reflashEntity();\n        this.ctx.body={success:updateSuccess};\n    }\n\n    async checkUnique(){\n        let [{total}]=await this.app.mysql.query('select count(1) total from invoke_info where name=?' ,[this.ctx.params.invokeName]);\n        this.ctx.body={total}\n    }\n\n\n\n    async groupName(){\n        this.ctx.body= await this.app.mysql.query(`select distinct groupName from invoke_info`);\n    }\n\n}\n\nfunction evil(fn) {\n    fn.replace(/(\\s?function\\s?)(\\w?)(\\s?\\(w+\\)[\\s|\\S]*)/g,function(w,p1,p2,p3){\n        return p1+p3;\n    });\n    let Fn = Function;\n    return new Fn('return ' + fn)();\n}\n\n\nmodule.exports=RestfulController;\n"]}